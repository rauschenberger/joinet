tlmgr_install("epstopdf")
tinytex::tlmgr("epstopdf")
tinytex::tlmgr_install("epstopdf")
tinytex::tlmgr_reinstall()
tinytex::reinstall()
Sys.which('gs')
Sys.which('ghostscript')
Sys.which('gs')
Sys.which('text')
Sys.which('tex')
Sys.which('gs')
Sys.which('gs')
Sys.which('tex')
tinytex::tlmgr_install('epstopdf')
tinytex::tlmgr_install("epstopdf")
tinytex::reinstall()
tinytex::reinstall()
tinytex::reinstall_tinytex()
tinytex::tlmgr_install("epstopdf")
?glmnet::predict.coxnet
?glmnet::predict
?glmnet::predict.glmnet
?glmnet:::predict.glmnet
set.seed(1)
rm(list=ls())
#load("D:/cornet/package/toydata.RData")
pkg <- "~/Desktop/joinet/package"
setwd(dir=pkg)
devtools::as.package(x=pkg,create=FALSE)
devtools::load_all(path=pkg)
#usethis::use_data(toydata,overwrite=TRUE)
devtools::document(pkg=pkg)
unlink(file.path(pkg,c("vignettes/figure","docs")),recursive=TRUE)
pkgdown::build_site(pkg=pkg)
file.remove(file.path(pkg,c(".Rhistory","CRAN-RELEASE",".Rbuildignore",".DS_Store")))
usethis::use_build_ignore(files=c("Readme.Rmd",".travis.yml","_pkgdown.yml","docs","cran-comments.md","appveyor.yml",".Rhistory",".DS_Store"))
devtools::build(pkg=pkg)
devtools::check(pkg=pkg,quiet=FALSE,manual=TRUE)
devtools::install(pkg=pkg,upgrade=FALSE)
setwd(pkg)
# old approach (https)
#system("git remote set-url origin https://rauschenberger:Juncker1419@github.com/rauschenberger/joinet.git")
# new approach (ssh)
system("ssh -T git@github.com")
system("git remote set-url origin git@github.com:rauschenberger/joinet.git")
system("git remote -v")
system("git add --all")
system("git commit -m \"reference\"")
system("git push origin master") # GitHub
#--- generate toydata ----------------------------------------------------------
set.seed(1)
#toydata <- NULL
#save(toydata,file=file.path("C:/Users/armin.rauschenberger/Desktop/package/cornet/data/toydata.R"))
#--- compile package -----------------------------------------------------------
rm(list=ls())
#name <- "joinet"
#load("D:/cornet/package/toydata.RData")
pkg <- "~/Desktop/joinet/package"
setwd(dir=pkg)
devtools::as.package(x=pkg,create=FALSE)
devtools::load_all(path=pkg)
#usethis::use_data(toydata,overwrite=TRUE)
devtools::document(pkg=pkg)
unlink(file.path(pkg,c("vignettes/figure","docs")),recursive=TRUE)
pkgdown::build_site(pkg=pkg)
file.remove(file.path(pkg,c(".Rhistory","CRAN-RELEASE",".Rbuildignore",".DS_Store")))
usethis::use_build_ignore(files=c("Readme.Rmd",".travis.yml","_pkgdown.yml","docs","cran-comments.md","appveyor.yml",".Rhistory",".DS_Store"))
#usethis::use_build_ignore(files="^\\.git",escape=FALSE)
#usethis::use_build_ignore(files="./.git")
#usethis::use_build_ignore(c("^[.].*$","^.*/[.].*$"),escape=FALSE)
#usethis::use_build_ignore("[.]git$",escape=FALSE)
devtools::build(pkg=pkg)
devtools::check(pkg=pkg,quiet=FALSE,manual=TRUE)
devtools::install(pkg=pkg,upgrade=FALSE)
setwd(pkg)
# old approach (https)
#system("git remote set-url origin https://rauschenberger:Juncker1419@github.com/rauschenberger/joinet.git")
# new approach (ssh)
system("ssh -T git@github.com")
system("git remote set-url origin git@github.com:rauschenberger/joinet.git")
system("git remote -v")
system("git add --all")
system("git commit -m \"reference\"")
system("git push origin master") # GitHub
